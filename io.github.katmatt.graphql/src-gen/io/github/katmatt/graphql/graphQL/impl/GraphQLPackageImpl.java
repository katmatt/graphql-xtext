/**
 * generated by Xtext 2.23.0
 */
package io.github.katmatt.graphql.graphQL.impl;

import io.github.katmatt.graphql.graphQL.Argument;
import io.github.katmatt.graphql.graphQL.Arguments;
import io.github.katmatt.graphql.graphQL.ArgumentsDefinition;
import io.github.katmatt.graphql.graphQL.BooleanValue;
import io.github.katmatt.graphql.graphQL.ConstValue;
import io.github.katmatt.graphql.graphQL.Directive;
import io.github.katmatt.graphql.graphQL.DirectiveDefinition;
import io.github.katmatt.graphql.graphQL.DirectiveLocation;
import io.github.katmatt.graphql.graphQL.DirectiveLocations;
import io.github.katmatt.graphql.graphQL.EnumTypeDefinition;
import io.github.katmatt.graphql.graphQL.EnumValue;
import io.github.katmatt.graphql.graphQL.EnumValueDefinition;
import io.github.katmatt.graphql.graphQL.FieldDefinition;
import io.github.katmatt.graphql.graphQL.FloatValue;
import io.github.katmatt.graphql.graphQL.GraphQLFactory;
import io.github.katmatt.graphql.graphQL.GraphQLPackage;
import io.github.katmatt.graphql.graphQL.InputObjectTypeDefinition;
import io.github.katmatt.graphql.graphQL.InputValueDefinition;
import io.github.katmatt.graphql.graphQL.IntValue;
import io.github.katmatt.graphql.graphQL.InterfaceDefinition;
import io.github.katmatt.graphql.graphQL.IntersectionType;
import io.github.katmatt.graphql.graphQL.ListType;
import io.github.katmatt.graphql.graphQL.ListValue;
import io.github.katmatt.graphql.graphQL.NamedType;
import io.github.katmatt.graphql.graphQL.NullValue;
import io.github.katmatt.graphql.graphQL.ObjectField;
import io.github.katmatt.graphql.graphQL.ObjectTypeDefinition;
import io.github.katmatt.graphql.graphQL.ObjectValue;
import io.github.katmatt.graphql.graphQL.OperationType;
import io.github.katmatt.graphql.graphQL.RootOperationTypeDefinition;
import io.github.katmatt.graphql.graphQL.ScalarTypeDefinition;
import io.github.katmatt.graphql.graphQL.SchemaDefinition;
import io.github.katmatt.graphql.graphQL.StringValue;
import io.github.katmatt.graphql.graphQL.Type;
import io.github.katmatt.graphql.graphQL.TypeDefinition;
import io.github.katmatt.graphql.graphQL.TypeSystemDefinition;
import io.github.katmatt.graphql.graphQL.UnionTypeDefinition;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class GraphQLPackageImpl extends EPackageImpl implements GraphQLPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeSystemDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass schemaDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rootOperationTypeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass scalarTypeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass objectTypeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass interfaceDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fieldDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass unionTypeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumTypeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumValueDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass inputObjectTypeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass inputValueDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass intersectionTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass namedTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass intValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass floatValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass nullValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stringValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass booleanValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass objectValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass objectFieldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass constValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass directiveDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass directiveEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass argumentsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass argumentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass argumentsDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass directiveLocationsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum directiveLocationEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum operationTypeEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see io.github.katmatt.graphql.graphQL.GraphQLPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private GraphQLPackageImpl()
  {
    super(eNS_URI, GraphQLFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link GraphQLPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static GraphQLPackage init()
  {
    if (isInited) return (GraphQLPackage)EPackage.Registry.INSTANCE.getEPackage(GraphQLPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredGraphQLPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    GraphQLPackageImpl theGraphQLPackage = registeredGraphQLPackage instanceof GraphQLPackageImpl ? (GraphQLPackageImpl)registeredGraphQLPackage : new GraphQLPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theGraphQLPackage.createPackageContents();

    // Initialize created meta-data
    theGraphQLPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theGraphQLPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(GraphQLPackage.eNS_URI, theGraphQLPackage);
    return theGraphQLPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTypeSystemDefinition()
  {
    return typeSystemDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTypeSystemDefinition_SchemaDefinitions()
  {
    return (EReference)typeSystemDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTypeSystemDefinition_TypeDefinitions()
  {
    return (EReference)typeSystemDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTypeSystemDefinition_DirectiveDefinitions()
  {
    return (EReference)typeSystemDefinitionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSchemaDefinition()
  {
    return schemaDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchemaDefinition_Description()
  {
    return (EReference)schemaDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchemaDefinition_TypeDefinitions()
  {
    return (EReference)schemaDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRootOperationTypeDefinition()
  {
    return rootOperationTypeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRootOperationTypeDefinition_OperationType()
  {
    return (EAttribute)rootOperationTypeDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRootOperationTypeDefinition_Type()
  {
    return (EReference)rootOperationTypeDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTypeDefinition()
  {
    return typeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTypeDefinition_Description()
  {
    return (EReference)typeDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTypeDefinition_Name()
  {
    return (EAttribute)typeDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getScalarTypeDefinition()
  {
    return scalarTypeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getObjectTypeDefinition()
  {
    return objectTypeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getObjectTypeDefinition_Implements()
  {
    return (EReference)objectTypeDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getObjectTypeDefinition_Directives()
  {
    return (EReference)objectTypeDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getObjectTypeDefinition_FieldDefinitions()
  {
    return (EReference)objectTypeDefinitionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInterfaceDefinition()
  {
    return interfaceDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInterfaceDefinition_Implements()
  {
    return (EReference)interfaceDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInterfaceDefinition_FieldDefinitions()
  {
    return (EReference)interfaceDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFieldDefinition()
  {
    return fieldDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFieldDefinition_Description()
  {
    return (EReference)fieldDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFieldDefinition_Name()
  {
    return (EAttribute)fieldDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFieldDefinition_Arguments()
  {
    return (EReference)fieldDefinitionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFieldDefinition_Type()
  {
    return (EReference)fieldDefinitionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUnionTypeDefinition()
  {
    return unionTypeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUnionTypeDefinition_MemberTypes()
  {
    return (EReference)unionTypeDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnumTypeDefinition()
  {
    return enumTypeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEnumTypeDefinition_ValueDefinitions()
  {
    return (EReference)enumTypeDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnumValueDefinition()
  {
    return enumValueDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEnumValueDefinition_Description()
  {
    return (EReference)enumValueDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEnumValueDefinition_Name()
  {
    return (EAttribute)enumValueDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInputObjectTypeDefinition()
  {
    return inputObjectTypeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInputObjectTypeDefinition_InputsFieldDefinitions()
  {
    return (EReference)inputObjectTypeDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInputValueDefinition()
  {
    return inputValueDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInputValueDefinition_Description()
  {
    return (EReference)inputValueDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getInputValueDefinition_Name()
  {
    return (EAttribute)inputValueDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInputValueDefinition_Type()
  {
    return (EReference)inputValueDefinitionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInputValueDefinition_DefaultValue()
  {
    return (EReference)inputValueDefinitionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getIntersectionType()
  {
    return intersectionTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getIntersectionType_MemberTypes()
  {
    return (EReference)intersectionTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getType()
  {
    return typeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getType_NonNull()
  {
    return (EAttribute)typeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNamedType()
  {
    return namedTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getNamedType_TypeDefinition()
  {
    return (EReference)namedTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getListType()
  {
    return listTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getListType_Type()
  {
    return (EReference)listTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getIntValue()
  {
    return intValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getIntValue_Value()
  {
    return (EAttribute)intValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFloatValue()
  {
    return floatValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFloatValue_Value()
  {
    return (EAttribute)floatValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNullValue()
  {
    return nullValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNullValue_Value()
  {
    return (EAttribute)nullValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStringValue()
  {
    return stringValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStringValue_Value()
  {
    return (EAttribute)stringValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBooleanValue()
  {
    return booleanValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBooleanValue_Value()
  {
    return (EAttribute)booleanValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnumValue()
  {
    return enumValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEnumValue_Value()
  {
    return (EReference)enumValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getObjectValue()
  {
    return objectValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getObjectValue_Fields()
  {
    return (EReference)objectValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getObjectField()
  {
    return objectFieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getObjectField_Name()
  {
    return (EReference)objectFieldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getObjectField_Value()
  {
    return (EReference)objectFieldEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConstValue()
  {
    return constValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getListValue()
  {
    return listValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getListValue_Values()
  {
    return (EReference)listValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDirectiveDefinition()
  {
    return directiveDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDirectiveDefinition_Description()
  {
    return (EReference)directiveDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDirectiveDefinition_Name()
  {
    return (EAttribute)directiveDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDirectiveDefinition_ArgumentDefinitions()
  {
    return (EReference)directiveDefinitionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDirectiveDefinition_Repeatable()
  {
    return (EAttribute)directiveDefinitionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDirectiveDefinition_DirectiveLocations()
  {
    return (EReference)directiveDefinitionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDirective()
  {
    return directiveEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDirective_Name()
  {
    return (EAttribute)directiveEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDirective_Arguments()
  {
    return (EReference)directiveEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getArguments()
  {
    return argumentsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArguments_Arguments()
  {
    return (EReference)argumentsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getArgument()
  {
    return argumentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArgument_ArgumentDefinition()
  {
    return (EReference)argumentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArgument_Value()
  {
    return (EReference)argumentEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getArgumentsDefinition()
  {
    return argumentsDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArgumentsDefinition_ArgumentDefinitions()
  {
    return (EReference)argumentsDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDirectiveLocations()
  {
    return directiveLocationsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDirectiveLocations_DirectiveLocations()
  {
    return (EAttribute)directiveLocationsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getDirectiveLocation()
  {
    return directiveLocationEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getOperationType()
  {
    return operationTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GraphQLFactory getGraphQLFactory()
  {
    return (GraphQLFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    typeSystemDefinitionEClass = createEClass(TYPE_SYSTEM_DEFINITION);
    createEReference(typeSystemDefinitionEClass, TYPE_SYSTEM_DEFINITION__SCHEMA_DEFINITIONS);
    createEReference(typeSystemDefinitionEClass, TYPE_SYSTEM_DEFINITION__TYPE_DEFINITIONS);
    createEReference(typeSystemDefinitionEClass, TYPE_SYSTEM_DEFINITION__DIRECTIVE_DEFINITIONS);

    schemaDefinitionEClass = createEClass(SCHEMA_DEFINITION);
    createEReference(schemaDefinitionEClass, SCHEMA_DEFINITION__DESCRIPTION);
    createEReference(schemaDefinitionEClass, SCHEMA_DEFINITION__TYPE_DEFINITIONS);

    rootOperationTypeDefinitionEClass = createEClass(ROOT_OPERATION_TYPE_DEFINITION);
    createEAttribute(rootOperationTypeDefinitionEClass, ROOT_OPERATION_TYPE_DEFINITION__OPERATION_TYPE);
    createEReference(rootOperationTypeDefinitionEClass, ROOT_OPERATION_TYPE_DEFINITION__TYPE);

    typeDefinitionEClass = createEClass(TYPE_DEFINITION);
    createEReference(typeDefinitionEClass, TYPE_DEFINITION__DESCRIPTION);
    createEAttribute(typeDefinitionEClass, TYPE_DEFINITION__NAME);

    scalarTypeDefinitionEClass = createEClass(SCALAR_TYPE_DEFINITION);

    objectTypeDefinitionEClass = createEClass(OBJECT_TYPE_DEFINITION);
    createEReference(objectTypeDefinitionEClass, OBJECT_TYPE_DEFINITION__IMPLEMENTS);
    createEReference(objectTypeDefinitionEClass, OBJECT_TYPE_DEFINITION__DIRECTIVES);
    createEReference(objectTypeDefinitionEClass, OBJECT_TYPE_DEFINITION__FIELD_DEFINITIONS);

    interfaceDefinitionEClass = createEClass(INTERFACE_DEFINITION);
    createEReference(interfaceDefinitionEClass, INTERFACE_DEFINITION__IMPLEMENTS);
    createEReference(interfaceDefinitionEClass, INTERFACE_DEFINITION__FIELD_DEFINITIONS);

    fieldDefinitionEClass = createEClass(FIELD_DEFINITION);
    createEReference(fieldDefinitionEClass, FIELD_DEFINITION__DESCRIPTION);
    createEAttribute(fieldDefinitionEClass, FIELD_DEFINITION__NAME);
    createEReference(fieldDefinitionEClass, FIELD_DEFINITION__ARGUMENTS);
    createEReference(fieldDefinitionEClass, FIELD_DEFINITION__TYPE);

    unionTypeDefinitionEClass = createEClass(UNION_TYPE_DEFINITION);
    createEReference(unionTypeDefinitionEClass, UNION_TYPE_DEFINITION__MEMBER_TYPES);

    enumTypeDefinitionEClass = createEClass(ENUM_TYPE_DEFINITION);
    createEReference(enumTypeDefinitionEClass, ENUM_TYPE_DEFINITION__VALUE_DEFINITIONS);

    enumValueDefinitionEClass = createEClass(ENUM_VALUE_DEFINITION);
    createEReference(enumValueDefinitionEClass, ENUM_VALUE_DEFINITION__DESCRIPTION);
    createEAttribute(enumValueDefinitionEClass, ENUM_VALUE_DEFINITION__NAME);

    inputObjectTypeDefinitionEClass = createEClass(INPUT_OBJECT_TYPE_DEFINITION);
    createEReference(inputObjectTypeDefinitionEClass, INPUT_OBJECT_TYPE_DEFINITION__INPUTS_FIELD_DEFINITIONS);

    inputValueDefinitionEClass = createEClass(INPUT_VALUE_DEFINITION);
    createEReference(inputValueDefinitionEClass, INPUT_VALUE_DEFINITION__DESCRIPTION);
    createEAttribute(inputValueDefinitionEClass, INPUT_VALUE_DEFINITION__NAME);
    createEReference(inputValueDefinitionEClass, INPUT_VALUE_DEFINITION__TYPE);
    createEReference(inputValueDefinitionEClass, INPUT_VALUE_DEFINITION__DEFAULT_VALUE);

    intersectionTypeEClass = createEClass(INTERSECTION_TYPE);
    createEReference(intersectionTypeEClass, INTERSECTION_TYPE__MEMBER_TYPES);

    typeEClass = createEClass(TYPE);
    createEAttribute(typeEClass, TYPE__NON_NULL);

    namedTypeEClass = createEClass(NAMED_TYPE);
    createEReference(namedTypeEClass, NAMED_TYPE__TYPE_DEFINITION);

    listTypeEClass = createEClass(LIST_TYPE);
    createEReference(listTypeEClass, LIST_TYPE__TYPE);

    intValueEClass = createEClass(INT_VALUE);
    createEAttribute(intValueEClass, INT_VALUE__VALUE);

    floatValueEClass = createEClass(FLOAT_VALUE);
    createEAttribute(floatValueEClass, FLOAT_VALUE__VALUE);

    nullValueEClass = createEClass(NULL_VALUE);
    createEAttribute(nullValueEClass, NULL_VALUE__VALUE);

    stringValueEClass = createEClass(STRING_VALUE);
    createEAttribute(stringValueEClass, STRING_VALUE__VALUE);

    booleanValueEClass = createEClass(BOOLEAN_VALUE);
    createEAttribute(booleanValueEClass, BOOLEAN_VALUE__VALUE);

    enumValueEClass = createEClass(ENUM_VALUE);
    createEReference(enumValueEClass, ENUM_VALUE__VALUE);

    objectValueEClass = createEClass(OBJECT_VALUE);
    createEReference(objectValueEClass, OBJECT_VALUE__FIELDS);

    objectFieldEClass = createEClass(OBJECT_FIELD);
    createEReference(objectFieldEClass, OBJECT_FIELD__NAME);
    createEReference(objectFieldEClass, OBJECT_FIELD__VALUE);

    constValueEClass = createEClass(CONST_VALUE);

    listValueEClass = createEClass(LIST_VALUE);
    createEReference(listValueEClass, LIST_VALUE__VALUES);

    directiveDefinitionEClass = createEClass(DIRECTIVE_DEFINITION);
    createEReference(directiveDefinitionEClass, DIRECTIVE_DEFINITION__DESCRIPTION);
    createEAttribute(directiveDefinitionEClass, DIRECTIVE_DEFINITION__NAME);
    createEReference(directiveDefinitionEClass, DIRECTIVE_DEFINITION__ARGUMENT_DEFINITIONS);
    createEAttribute(directiveDefinitionEClass, DIRECTIVE_DEFINITION__REPEATABLE);
    createEReference(directiveDefinitionEClass, DIRECTIVE_DEFINITION__DIRECTIVE_LOCATIONS);

    directiveEClass = createEClass(DIRECTIVE);
    createEAttribute(directiveEClass, DIRECTIVE__NAME);
    createEReference(directiveEClass, DIRECTIVE__ARGUMENTS);

    argumentsEClass = createEClass(ARGUMENTS);
    createEReference(argumentsEClass, ARGUMENTS__ARGUMENTS);

    argumentEClass = createEClass(ARGUMENT);
    createEReference(argumentEClass, ARGUMENT__ARGUMENT_DEFINITION);
    createEReference(argumentEClass, ARGUMENT__VALUE);

    argumentsDefinitionEClass = createEClass(ARGUMENTS_DEFINITION);
    createEReference(argumentsDefinitionEClass, ARGUMENTS_DEFINITION__ARGUMENT_DEFINITIONS);

    directiveLocationsEClass = createEClass(DIRECTIVE_LOCATIONS);
    createEAttribute(directiveLocationsEClass, DIRECTIVE_LOCATIONS__DIRECTIVE_LOCATIONS);

    // Create enums
    directiveLocationEEnum = createEEnum(DIRECTIVE_LOCATION);
    operationTypeEEnum = createEEnum(OPERATION_TYPE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    scalarTypeDefinitionEClass.getESuperTypes().add(this.getTypeDefinition());
    objectTypeDefinitionEClass.getESuperTypes().add(this.getTypeDefinition());
    interfaceDefinitionEClass.getESuperTypes().add(this.getTypeDefinition());
    unionTypeDefinitionEClass.getESuperTypes().add(this.getTypeDefinition());
    enumTypeDefinitionEClass.getESuperTypes().add(this.getTypeDefinition());
    inputObjectTypeDefinitionEClass.getESuperTypes().add(this.getTypeDefinition());
    namedTypeEClass.getESuperTypes().add(this.getType());
    listTypeEClass.getESuperTypes().add(this.getType());
    intValueEClass.getESuperTypes().add(this.getConstValue());
    floatValueEClass.getESuperTypes().add(this.getConstValue());
    nullValueEClass.getESuperTypes().add(this.getConstValue());
    stringValueEClass.getESuperTypes().add(this.getConstValue());
    booleanValueEClass.getESuperTypes().add(this.getConstValue());
    enumValueEClass.getESuperTypes().add(this.getConstValue());
    objectValueEClass.getESuperTypes().add(this.getConstValue());
    listValueEClass.getESuperTypes().add(this.getConstValue());

    // Initialize classes and features; add operations and parameters
    initEClass(typeSystemDefinitionEClass, TypeSystemDefinition.class, "TypeSystemDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTypeSystemDefinition_SchemaDefinitions(), this.getSchemaDefinition(), null, "schemaDefinitions", null, 0, -1, TypeSystemDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTypeSystemDefinition_TypeDefinitions(), this.getTypeDefinition(), null, "typeDefinitions", null, 0, -1, TypeSystemDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTypeSystemDefinition_DirectiveDefinitions(), this.getDirectiveDefinition(), null, "directiveDefinitions", null, 0, -1, TypeSystemDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(schemaDefinitionEClass, SchemaDefinition.class, "SchemaDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSchemaDefinition_Description(), this.getStringValue(), null, "description", null, 0, 1, SchemaDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchemaDefinition_TypeDefinitions(), this.getRootOperationTypeDefinition(), null, "typeDefinitions", null, 0, -1, SchemaDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(rootOperationTypeDefinitionEClass, RootOperationTypeDefinition.class, "RootOperationTypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRootOperationTypeDefinition_OperationType(), this.getOperationType(), "operationType", null, 0, 1, RootOperationTypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRootOperationTypeDefinition_Type(), this.getTypeDefinition(), null, "type", null, 0, 1, RootOperationTypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typeDefinitionEClass, TypeDefinition.class, "TypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTypeDefinition_Description(), this.getStringValue(), null, "description", null, 0, 1, TypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTypeDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, TypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(scalarTypeDefinitionEClass, ScalarTypeDefinition.class, "ScalarTypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(objectTypeDefinitionEClass, ObjectTypeDefinition.class, "ObjectTypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getObjectTypeDefinition_Implements(), this.getIntersectionType(), null, "implements", null, 0, 1, ObjectTypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getObjectTypeDefinition_Directives(), this.getDirective(), null, "directives", null, 0, -1, ObjectTypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getObjectTypeDefinition_FieldDefinitions(), this.getFieldDefinition(), null, "fieldDefinitions", null, 0, -1, ObjectTypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(interfaceDefinitionEClass, InterfaceDefinition.class, "InterfaceDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getInterfaceDefinition_Implements(), this.getIntersectionType(), null, "implements", null, 0, 1, InterfaceDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getInterfaceDefinition_FieldDefinitions(), this.getFieldDefinition(), null, "fieldDefinitions", null, 0, -1, InterfaceDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fieldDefinitionEClass, FieldDefinition.class, "FieldDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFieldDefinition_Description(), this.getStringValue(), null, "description", null, 0, 1, FieldDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFieldDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, FieldDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFieldDefinition_Arguments(), this.getArgumentsDefinition(), null, "arguments", null, 0, 1, FieldDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFieldDefinition_Type(), this.getType(), null, "type", null, 0, 1, FieldDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(unionTypeDefinitionEClass, UnionTypeDefinition.class, "UnionTypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getUnionTypeDefinition_MemberTypes(), this.getType(), null, "memberTypes", null, 0, -1, UnionTypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumTypeDefinitionEClass, EnumTypeDefinition.class, "EnumTypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEnumTypeDefinition_ValueDefinitions(), this.getEnumValueDefinition(), null, "valueDefinitions", null, 0, -1, EnumTypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumValueDefinitionEClass, EnumValueDefinition.class, "EnumValueDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEnumValueDefinition_Description(), this.getStringValue(), null, "description", null, 0, 1, EnumValueDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEnumValueDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, EnumValueDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(inputObjectTypeDefinitionEClass, InputObjectTypeDefinition.class, "InputObjectTypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getInputObjectTypeDefinition_InputsFieldDefinitions(), this.getInputValueDefinition(), null, "inputsFieldDefinitions", null, 0, -1, InputObjectTypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(inputValueDefinitionEClass, InputValueDefinition.class, "InputValueDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getInputValueDefinition_Description(), this.getStringValue(), null, "description", null, 0, 1, InputValueDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInputValueDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, InputValueDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getInputValueDefinition_Type(), this.getType(), null, "type", null, 0, 1, InputValueDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getInputValueDefinition_DefaultValue(), this.getConstValue(), null, "defaultValue", null, 0, 1, InputValueDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(intersectionTypeEClass, IntersectionType.class, "IntersectionType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getIntersectionType_MemberTypes(), this.getType(), null, "memberTypes", null, 0, -1, IntersectionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typeEClass, Type.class, "Type", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getType_NonNull(), ecorePackage.getEBoolean(), "nonNull", null, 0, 1, Type.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(namedTypeEClass, NamedType.class, "NamedType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getNamedType_TypeDefinition(), this.getTypeDefinition(), null, "typeDefinition", null, 0, 1, NamedType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listTypeEClass, ListType.class, "ListType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getListType_Type(), this.getType(), null, "type", null, 0, 1, ListType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(intValueEClass, IntValue.class, "IntValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getIntValue_Value(), ecorePackage.getEString(), "value", null, 0, 1, IntValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(floatValueEClass, FloatValue.class, "FloatValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFloatValue_Value(), ecorePackage.getEString(), "value", null, 0, 1, FloatValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(nullValueEClass, NullValue.class, "NullValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNullValue_Value(), ecorePackage.getEString(), "value", null, 0, 1, NullValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(stringValueEClass, StringValue.class, "StringValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStringValue_Value(), ecorePackage.getEString(), "value", null, 0, 1, StringValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(booleanValueEClass, BooleanValue.class, "BooleanValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBooleanValue_Value(), ecorePackage.getEString(), "value", null, 0, 1, BooleanValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumValueEClass, EnumValue.class, "EnumValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEnumValue_Value(), this.getEnumValueDefinition(), null, "value", null, 0, 1, EnumValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(objectValueEClass, ObjectValue.class, "ObjectValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getObjectValue_Fields(), this.getObjectField(), null, "fields", null, 0, -1, ObjectValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(objectFieldEClass, ObjectField.class, "ObjectField", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getObjectField_Name(), this.getFieldDefinition(), null, "name", null, 0, 1, ObjectField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getObjectField_Value(), this.getConstValue(), null, "value", null, 0, 1, ObjectField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(constValueEClass, ConstValue.class, "ConstValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(listValueEClass, ListValue.class, "ListValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getListValue_Values(), this.getConstValue(), null, "values", null, 0, -1, ListValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(directiveDefinitionEClass, DirectiveDefinition.class, "DirectiveDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDirectiveDefinition_Description(), this.getStringValue(), null, "description", null, 0, 1, DirectiveDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDirectiveDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, DirectiveDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDirectiveDefinition_ArgumentDefinitions(), this.getArgumentsDefinition(), null, "argumentDefinitions", null, 0, 1, DirectiveDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDirectiveDefinition_Repeatable(), ecorePackage.getEBoolean(), "repeatable", null, 0, 1, DirectiveDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDirectiveDefinition_DirectiveLocations(), this.getDirectiveLocations(), null, "directiveLocations", null, 0, -1, DirectiveDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(directiveEClass, Directive.class, "Directive", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDirective_Name(), ecorePackage.getEString(), "name", null, 0, 1, Directive.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDirective_Arguments(), this.getArguments(), null, "arguments", null, 0, 1, Directive.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(argumentsEClass, Arguments.class, "Arguments", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getArguments_Arguments(), this.getArgument(), null, "arguments", null, 0, -1, Arguments.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(argumentEClass, Argument.class, "Argument", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getArgument_ArgumentDefinition(), this.getInputValueDefinition(), null, "argumentDefinition", null, 0, 1, Argument.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArgument_Value(), this.getConstValue(), null, "value", null, 0, 1, Argument.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(argumentsDefinitionEClass, ArgumentsDefinition.class, "ArgumentsDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getArgumentsDefinition_ArgumentDefinitions(), this.getInputValueDefinition(), null, "argumentDefinitions", null, 0, -1, ArgumentsDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(directiveLocationsEClass, DirectiveLocations.class, "DirectiveLocations", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDirectiveLocations_DirectiveLocations(), this.getDirectiveLocation(), "directiveLocations", null, 0, -1, DirectiveLocations.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(directiveLocationEEnum, DirectiveLocation.class, "DirectiveLocation");
    addEEnumLiteral(directiveLocationEEnum, DirectiveLocation.QUERY);
    addEEnumLiteral(directiveLocationEEnum, DirectiveLocation.MUTATION);
    addEEnumLiteral(directiveLocationEEnum, DirectiveLocation.SUBSCRIPTION);
    addEEnumLiteral(directiveLocationEEnum, DirectiveLocation.FIELD);
    addEEnumLiteral(directiveLocationEEnum, DirectiveLocation.FRAGMENT_DEFINITION);
    addEEnumLiteral(directiveLocationEEnum, DirectiveLocation.FRAGMENT_SPREAD);
    addEEnumLiteral(directiveLocationEEnum, DirectiveLocation.INLINE_FRAGMENT);
    addEEnumLiteral(directiveLocationEEnum, DirectiveLocation.VARIABLE_DEFINITION);
    addEEnumLiteral(directiveLocationEEnum, DirectiveLocation.SCHEMA);
    addEEnumLiteral(directiveLocationEEnum, DirectiveLocation.SCALAR);
    addEEnumLiteral(directiveLocationEEnum, DirectiveLocation.OBJECT);
    addEEnumLiteral(directiveLocationEEnum, DirectiveLocation.FIELD_DEFINITION);
    addEEnumLiteral(directiveLocationEEnum, DirectiveLocation.ARGUMENT_DEFINITION);
    addEEnumLiteral(directiveLocationEEnum, DirectiveLocation.INTERFACE);
    addEEnumLiteral(directiveLocationEEnum, DirectiveLocation.UNION);
    addEEnumLiteral(directiveLocationEEnum, DirectiveLocation.ENUM);
    addEEnumLiteral(directiveLocationEEnum, DirectiveLocation.ENUM_VALUE);
    addEEnumLiteral(directiveLocationEEnum, DirectiveLocation.INPUT_OBJECT);
    addEEnumLiteral(directiveLocationEEnum, DirectiveLocation.INPUT_FIELD_DEFINITION);

    initEEnum(operationTypeEEnum, OperationType.class, "OperationType");
    addEEnumLiteral(operationTypeEEnum, OperationType.QUERY);
    addEEnumLiteral(operationTypeEEnum, OperationType.MUTATION);
    addEEnumLiteral(operationTypeEEnum, OperationType.SUBSCRIPTION);

    // Create resource
    createResource(eNS_URI);
  }

} //GraphQLPackageImpl
