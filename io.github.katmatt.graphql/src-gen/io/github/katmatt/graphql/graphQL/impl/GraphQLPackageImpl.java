/**
 * generated by Xtext 2.23.0
 */
package io.github.katmatt.graphql.graphQL.impl;

import io.github.katmatt.graphql.graphQL.EnumTypeDefinition;
import io.github.katmatt.graphql.graphQL.EnumValueDefinition;
import io.github.katmatt.graphql.graphQL.FieldDefinition;
import io.github.katmatt.graphql.graphQL.GraphQLFactory;
import io.github.katmatt.graphql.graphQL.GraphQLPackage;
import io.github.katmatt.graphql.graphQL.InputObjectTypeDefinition;
import io.github.katmatt.graphql.graphQL.InterfaceDefinition;
import io.github.katmatt.graphql.graphQL.ObjectTypeDefinition;
import io.github.katmatt.graphql.graphQL.OperationType;
import io.github.katmatt.graphql.graphQL.RootOperationTypeDefinition;
import io.github.katmatt.graphql.graphQL.ScalarTypeDefinition;
import io.github.katmatt.graphql.graphQL.SchemaDefinition;
import io.github.katmatt.graphql.graphQL.TypeDefinition;
import io.github.katmatt.graphql.graphQL.TypeSystemDefinition;
import io.github.katmatt.graphql.graphQL.UnionTypeDefinition;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class GraphQLPackageImpl extends EPackageImpl implements GraphQLPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeSystemDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass schemaDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rootOperationTypeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass scalarTypeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass objectTypeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass interfaceDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fieldDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass unionTypeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumTypeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumValueDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass inputObjectTypeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum operationTypeEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see io.github.katmatt.graphql.graphQL.GraphQLPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private GraphQLPackageImpl()
  {
    super(eNS_URI, GraphQLFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link GraphQLPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static GraphQLPackage init()
  {
    if (isInited) return (GraphQLPackage)EPackage.Registry.INSTANCE.getEPackage(GraphQLPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredGraphQLPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    GraphQLPackageImpl theGraphQLPackage = registeredGraphQLPackage instanceof GraphQLPackageImpl ? (GraphQLPackageImpl)registeredGraphQLPackage : new GraphQLPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theGraphQLPackage.createPackageContents();

    // Initialize created meta-data
    theGraphQLPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theGraphQLPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(GraphQLPackage.eNS_URI, theGraphQLPackage);
    return theGraphQLPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTypeSystemDefinition()
  {
    return typeSystemDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTypeSystemDefinition_SchemaDefinitions()
  {
    return (EReference)typeSystemDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTypeSystemDefinition_TypeDefinitions()
  {
    return (EReference)typeSystemDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSchemaDefinition()
  {
    return schemaDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchemaDefinition_TypeDefinitions()
  {
    return (EReference)schemaDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRootOperationTypeDefinition()
  {
    return rootOperationTypeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRootOperationTypeDefinition_OperationType()
  {
    return (EAttribute)rootOperationTypeDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRootOperationTypeDefinition_Type()
  {
    return (EReference)rootOperationTypeDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTypeDefinition()
  {
    return typeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTypeDefinition_Name()
  {
    return (EAttribute)typeDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getScalarTypeDefinition()
  {
    return scalarTypeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getObjectTypeDefinition()
  {
    return objectTypeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getObjectTypeDefinition_FieldDefinitions()
  {
    return (EReference)objectTypeDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInterfaceDefinition()
  {
    return interfaceDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInterfaceDefinition_FieldDefinitions()
  {
    return (EReference)interfaceDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFieldDefinition()
  {
    return fieldDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFieldDefinition_Name()
  {
    return (EAttribute)fieldDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFieldDefinition_Type()
  {
    return (EReference)fieldDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUnionTypeDefinition()
  {
    return unionTypeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUnionTypeDefinition_MemberTypes()
  {
    return (EReference)unionTypeDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnumTypeDefinition()
  {
    return enumTypeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEnumTypeDefinition_ValueDefinitions()
  {
    return (EReference)enumTypeDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnumValueDefinition()
  {
    return enumValueDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEnumValueDefinition_Name()
  {
    return (EAttribute)enumValueDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInputObjectTypeDefinition()
  {
    return inputObjectTypeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInputObjectTypeDefinition_FieldDefinitions()
  {
    return (EReference)inputObjectTypeDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getOperationType()
  {
    return operationTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GraphQLFactory getGraphQLFactory()
  {
    return (GraphQLFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    typeSystemDefinitionEClass = createEClass(TYPE_SYSTEM_DEFINITION);
    createEReference(typeSystemDefinitionEClass, TYPE_SYSTEM_DEFINITION__SCHEMA_DEFINITIONS);
    createEReference(typeSystemDefinitionEClass, TYPE_SYSTEM_DEFINITION__TYPE_DEFINITIONS);

    schemaDefinitionEClass = createEClass(SCHEMA_DEFINITION);
    createEReference(schemaDefinitionEClass, SCHEMA_DEFINITION__TYPE_DEFINITIONS);

    rootOperationTypeDefinitionEClass = createEClass(ROOT_OPERATION_TYPE_DEFINITION);
    createEAttribute(rootOperationTypeDefinitionEClass, ROOT_OPERATION_TYPE_DEFINITION__OPERATION_TYPE);
    createEReference(rootOperationTypeDefinitionEClass, ROOT_OPERATION_TYPE_DEFINITION__TYPE);

    typeDefinitionEClass = createEClass(TYPE_DEFINITION);
    createEAttribute(typeDefinitionEClass, TYPE_DEFINITION__NAME);

    scalarTypeDefinitionEClass = createEClass(SCALAR_TYPE_DEFINITION);

    objectTypeDefinitionEClass = createEClass(OBJECT_TYPE_DEFINITION);
    createEReference(objectTypeDefinitionEClass, OBJECT_TYPE_DEFINITION__FIELD_DEFINITIONS);

    interfaceDefinitionEClass = createEClass(INTERFACE_DEFINITION);
    createEReference(interfaceDefinitionEClass, INTERFACE_DEFINITION__FIELD_DEFINITIONS);

    fieldDefinitionEClass = createEClass(FIELD_DEFINITION);
    createEAttribute(fieldDefinitionEClass, FIELD_DEFINITION__NAME);
    createEReference(fieldDefinitionEClass, FIELD_DEFINITION__TYPE);

    unionTypeDefinitionEClass = createEClass(UNION_TYPE_DEFINITION);
    createEReference(unionTypeDefinitionEClass, UNION_TYPE_DEFINITION__MEMBER_TYPES);

    enumTypeDefinitionEClass = createEClass(ENUM_TYPE_DEFINITION);
    createEReference(enumTypeDefinitionEClass, ENUM_TYPE_DEFINITION__VALUE_DEFINITIONS);

    enumValueDefinitionEClass = createEClass(ENUM_VALUE_DEFINITION);
    createEAttribute(enumValueDefinitionEClass, ENUM_VALUE_DEFINITION__NAME);

    inputObjectTypeDefinitionEClass = createEClass(INPUT_OBJECT_TYPE_DEFINITION);
    createEReference(inputObjectTypeDefinitionEClass, INPUT_OBJECT_TYPE_DEFINITION__FIELD_DEFINITIONS);

    // Create enums
    operationTypeEEnum = createEEnum(OPERATION_TYPE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    scalarTypeDefinitionEClass.getESuperTypes().add(this.getTypeDefinition());
    objectTypeDefinitionEClass.getESuperTypes().add(this.getTypeDefinition());
    interfaceDefinitionEClass.getESuperTypes().add(this.getTypeDefinition());
    unionTypeDefinitionEClass.getESuperTypes().add(this.getTypeDefinition());
    enumTypeDefinitionEClass.getESuperTypes().add(this.getTypeDefinition());
    inputObjectTypeDefinitionEClass.getESuperTypes().add(this.getTypeDefinition());

    // Initialize classes and features; add operations and parameters
    initEClass(typeSystemDefinitionEClass, TypeSystemDefinition.class, "TypeSystemDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTypeSystemDefinition_SchemaDefinitions(), this.getSchemaDefinition(), null, "schemaDefinitions", null, 0, -1, TypeSystemDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTypeSystemDefinition_TypeDefinitions(), this.getTypeDefinition(), null, "typeDefinitions", null, 0, -1, TypeSystemDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(schemaDefinitionEClass, SchemaDefinition.class, "SchemaDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSchemaDefinition_TypeDefinitions(), this.getRootOperationTypeDefinition(), null, "typeDefinitions", null, 0, -1, SchemaDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(rootOperationTypeDefinitionEClass, RootOperationTypeDefinition.class, "RootOperationTypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRootOperationTypeDefinition_OperationType(), this.getOperationType(), "operationType", null, 0, 1, RootOperationTypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRootOperationTypeDefinition_Type(), this.getTypeDefinition(), null, "type", null, 0, 1, RootOperationTypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typeDefinitionEClass, TypeDefinition.class, "TypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTypeDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, TypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(scalarTypeDefinitionEClass, ScalarTypeDefinition.class, "ScalarTypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(objectTypeDefinitionEClass, ObjectTypeDefinition.class, "ObjectTypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getObjectTypeDefinition_FieldDefinitions(), this.getFieldDefinition(), null, "fieldDefinitions", null, 0, -1, ObjectTypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(interfaceDefinitionEClass, InterfaceDefinition.class, "InterfaceDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getInterfaceDefinition_FieldDefinitions(), this.getFieldDefinition(), null, "fieldDefinitions", null, 0, -1, InterfaceDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fieldDefinitionEClass, FieldDefinition.class, "FieldDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFieldDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, FieldDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFieldDefinition_Type(), this.getTypeDefinition(), null, "type", null, 0, 1, FieldDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(unionTypeDefinitionEClass, UnionTypeDefinition.class, "UnionTypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getUnionTypeDefinition_MemberTypes(), this.getTypeDefinition(), null, "memberTypes", null, 0, -1, UnionTypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumTypeDefinitionEClass, EnumTypeDefinition.class, "EnumTypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEnumTypeDefinition_ValueDefinitions(), this.getEnumValueDefinition(), null, "valueDefinitions", null, 0, -1, EnumTypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumValueDefinitionEClass, EnumValueDefinition.class, "EnumValueDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEnumValueDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, EnumValueDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(inputObjectTypeDefinitionEClass, InputObjectTypeDefinition.class, "InputObjectTypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getInputObjectTypeDefinition_FieldDefinitions(), this.getFieldDefinition(), null, "fieldDefinitions", null, 0, -1, InputObjectTypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(operationTypeEEnum, OperationType.class, "OperationType");
    addEEnumLiteral(operationTypeEEnum, OperationType.QUERY);
    addEEnumLiteral(operationTypeEEnum, OperationType.MUTATION);
    addEEnumLiteral(operationTypeEEnum, OperationType.SUBSCRIPTION);

    // Create resource
    createResource(eNS_URI);
  }

} //GraphQLPackageImpl
